import React, { Component, forwardRef } from "react";
import "./Home.css";

class HomeInner extends Component {
  constructor(props) {
    super(props);
    this.state = {
      mainText: "NUESTRO OBJETIVO: BRINDAR EL MEJOR SERVICIO A NUESTROS CLIENTES",
      backgroundColor: "#193043",
      textOpacity: 1,
      selectedOption: 0,
      options: [
        {
          text: "NUESTRO OBJETIVO: BRINDAR EL MEJOR SERVICIO A NUESTROS CLIENTES",
          backgroundColor: "#193043",
        },
        {
          text: "SOMOS EL EQUIPO QUE TE ACOMPAÑA DE PRINCIPIO A FIN",
          backgroundColor: "#193043",
        },
        {
          text: "INFÓRMATE DE LAS NOVEDADES LEGALES EN NUESTROS EVENTOS",
          backgroundColor: "#193043",
        },
      ],
    };
    this.intervalId = null;
  }

  componentDidMount() {
    this.intervalId = setInterval(() => {
      this.changeContent();
    }, 5000); // tiempo de cambio
  }

  componentWillUnmount() {
    clearInterval(this.intervalId);
  }

  changeContent = () => {
    // Primero, disminuimos la opacidad a 0 para iniciar el efecto de desvanecimiento
    this.setState({ textOpacity: 0 }, () => {
      // Esperamos un poco antes de cambiar el contenido y restaurar la opacidad
      setTimeout(() => {
        this.setState((prevState) => {
          const newIndex = (prevState.selectedOption + 1) % prevState.options.length;
          return {
            selectedOption: newIndex,
            mainText: prevState.options[newIndex].text,
            backgroundColor: prevState.options[newIndex].backgroundColor,
            textOpacity: 1, // Restauramos la opacidad a 1 para completar el efecto
          };
        });
      }, 500); // Tiempo de espera para simular la transición
    });
  };

  // Método para renderizar el texto principal con la palabra clave coloreada
  renderMainText = () => {
    const { selectedOption, options } = this.state;
    const keywordStyles = [{ color: '#6d7d87' }, { color: '#6d7d87' }, { color: '#6d7d87' }]; // Estilos para cada palabra clave
    const keywords = ["objetivo:", "equipo", "legales"]; // Palabras clave

    const textParts = options[selectedOption].text.split(new RegExp(`(${keywords[selectedOption]})`, 'i')).map((part, index) =>
      part.toLowerCase() === keywords[selectedOption].toLowerCase() ? <span key={index} style={keywordStyles[selectedOption]}>{part}</span> : part
    );

    return <h1>{textParts}</h1>;
  };

  render() {
    const { backgroundColor, textOpacity } = this.state;

    return (
      <div className="home" style={{ backgroundColor: backgroundColor, transition: 'background-color 0.5s ease-in-out' }}>
        <div className="home-content-left" style={{ opacity: textOpacity, transition: 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out' }}>
          {this.renderMainText()}
        </div>
        {/* home-content-right ahora oculta con CSS */}
      </div>
    );
  }
}

const Home = forwardRef((props, ref) => <HomeInner {...props} ref={ref} />);
export default Home;
HOME.CSS: /* Estilos base, aplicables a escritorios y dispositivos más grandes */
.home {
  height: 1000px;
  display: flex;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  transition: background-color 0.5s ease-in-out;
}

.home-content-left, .home-content-left h1, .home-content-right p {
  transition: opacity 0.5s ease-in-out;
}

.home-content-left {
  flex: 1;
  text-align: left;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-left: 5%;
  margin-right: 0;
  margin-top: -100px;
  font-size: 35px;
  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
  will-change: opacity, transform;
}

.home-content-right {
  flex: 1;
  text-align: left;
  display: none;
  flex-direction: column;
  justify-content: center;
  padding-right: 10%;
  margin-top: -100px;
}

.home h1 {
  font-size: 3em;
  margin-bottom: 0.5em;
  color: white;
}

.home-button {
  background-color: #173142;
  color: white;
  border: none;
  padding: 10px 20px;
  cursor: pointer;
  font-size: 1em;
  border-radius: 15px;
  width: 300px;
  transition: background-color 0.3s;
}

.home-button:hover {
  background-color: #1d1b17;
}

.clickable-option, .selected, .not-selected {
  cursor: pointer;
  color: white;
  transition: font-size 0.5s ease-in-out, opacity 0.5s ease-in-out, background-color 0.5s ease-in-out, padding 0.5s ease-in-out;
}

.selected {
  font-size: 1.2em;
  opacity: 1;
  padding: 8px 0;
  background-color: rgba(255, 255, 255, 0.2);
  border-bottom: 3px solid white;
}

.not-selected {
  opacity: 0.5;
}

/* Estilos para tabletas: pantallas entre 600px y 900px */
@media (min-width: 600px) and (max-width: 900px) {
  .home {
    height: auto; /* Altura ajustable según el contenido */
  }

  .home-content-left, .home-content-right {
    flex: 1; /* Hace que ambos contenedores tengan la misma flexibilidad */
    margin-right: 50px; /* Ajusta el margen derecho */
    margin-top: 0; /* Elimina el margen superior negativo */
    padding: 5%; /* Aumenta el padding para mejor lectura */
  }

  .home h1 {
    font-size: 2.5em; /* Reduce el tamaño del título */
  }

  .home-button {
    width: 100%; /* Hace que el botón se ajuste al contenedor */
    max-width: 250px; /* Limita el ancho máximo del botón */
    margin: 0 auto; /* Centra el botón */
  }
}

/* Estilos para móviles: pantallas menores a 600px */
@media (max-width: 599px) {
  .home {
    flex-direction: column; /* Alinea los contenedores en columna */
    height: 450px;
  }

  .home-content-left {
    flex: none; /* Elimina la propiedad flex para ajustar manualmente */
    text-align: left; /* Centra el texto */
    padding: 5%; /* Ajusta el padding para un mejor aprovechamiento del espacio */
    width: 80%; /* Hace que ocupe todo el ancho disponible */
    margin-top: 80px;
    font-size: 20px;
  }

  .home-content-right {
    display: none;
  }

  .home h1 {
    font-size: 2em; /* Ajusta el tamaño del título para pantallas más pequeñas */
  }

  .home-button {
    width: 100%; /* Extiende el botón para que ocupe todo el ancho */
    max-width: 200px; /* Ajusta el ancho máximo para móviles */
    margin: 0 auto; /* Centra el botón dentro de su contenedor */
  }
}